// This file is autogenerated: please see the codegen template "Options"
#ifndef PDFTRON_H_CPPPDFDataExtractionOptions
#define PDFTRON_H_CPPPDFDataExtractionOptions

#include <PDF/OptionsBase.h>

namespace pdftron{ namespace PDF{ 

class DataExtractionOptions
{
public:
	DataExtractionOptions();
	~DataExtractionOptions();

	
	/**
	* Gets the value Language from the options object
	* Specifies the OCR language(s). Use 3-letter ISO 639-2 language codes, separated by spaces. Example: "eng deu spa fra". The default is English.
	* @return a UString, the current value for Language.
	*/
	UString GetLanguage();

	/**
	* Sets the value for Language in the options object
	* Specifies the OCR language(s). Use 3-letter ISO 639-2 language codes, separated by spaces. Example: "eng deu spa fra". The default is English.
	* @param value: the new value for Language
	* @return this object, for call chaining
	*/
	DataExtractionOptions& SetLanguage(const UString& value);

	
	/**
	* Gets the value PDFPassword from the options object
	* Specifies the password if the PDF requires one. The default is no password.
	* @return a UString, the current value for PDFPassword.
	*/
	UString GetPDFPassword();

	/**
	* Sets the value for PDFPassword in the options object
	* Specifies the password if the PDF requires one. The default is no password.
	* @param value: the new value for PDFPassword
	* @return this object, for call chaining
	*/
	DataExtractionOptions& SetPDFPassword(const UString& value);

	
	/**
	* Gets the value Pages from the options object
	* Specifies a range of pages to be converted, such as "1-5". By default all pages are converted. The first page has the page number of 1.
	* @return a UString, the current value for Pages.
	*/
	UString GetPages();

	/**
	* Sets the value for Pages in the options object
	* Specifies a range of pages to be converted, such as "1-5". By default all pages are converted. The first page has the page number of 1.
	* @param value: the new value for Pages
	* @return this object, for call chaining
	*/
	DataExtractionOptions& SetPages(const UString& value);

	
	// @cond PRIVATE_DOC
	#ifndef SWIGHIDDEN
	const SDF::Obj& GetInternalObj() const;
	SDF::Obj& GetInternalObj();

private:
	
	SDF::ObjSet m_obj_set;
	SDF::Obj m_dict;
	#endif
	// @endcond
};

}
}

#include "../Impl/DataExtractionOptions.inl"
#endif // PDFTRON_H_CPPPDFDataExtractionOptions

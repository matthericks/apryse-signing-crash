// This file is autogenerated: please see the codegen template "Options"
namespace pdftron{ namespace PDF{ 

inline DataExtractionOptions::DataExtractionOptions()
	: m_obj_set()
	, m_dict()
{
	m_dict = m_obj_set.CreateDict();
}

inline DataExtractionOptions::~DataExtractionOptions()
{
}


inline UString DataExtractionOptions::GetLanguage()
{
	SDF::Obj found = m_dict.FindObj("Language");
	if(found.IsValid())
	{
		return (found.GetAsPDFText());
	}
	return ("");
}

inline DataExtractionOptions& DataExtractionOptions::SetLanguage(const UString& value)
{
	PDF::OptionsBase::PutText(m_dict, "Language", (value));
	return *this;
}


inline UString DataExtractionOptions::GetPDFPassword()
{
	SDF::Obj found = m_dict.FindObj("PDFPassword");
	if(found.IsValid())
	{
		return (found.GetAsPDFText());
	}
	return ("");
}

inline DataExtractionOptions& DataExtractionOptions::SetPDFPassword(const UString& value)
{
	PDF::OptionsBase::PutText(m_dict, "PDFPassword", (value));
	return *this;
}


inline UString DataExtractionOptions::GetPages()
{
	SDF::Obj found = m_dict.FindObj("Pages");
	if(found.IsValid())
	{
		return (found.GetAsPDFText());
	}
	return ("");
}

inline DataExtractionOptions& DataExtractionOptions::SetPages(const UString& value)
{
	PDF::OptionsBase::PutText(m_dict, "Pages", (value));
	return *this;
}



inline const SDF::Obj& DataExtractionOptions::GetInternalObj() const
{
	return m_dict;
}

inline SDF::Obj& DataExtractionOptions::GetInternalObj()
{
	return m_dict;
}

}
}
